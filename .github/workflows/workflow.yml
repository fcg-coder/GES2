name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main  # Запускать только на ветке main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r api/requirements.txt

    - name: Run Django tests
      run: |
        cd api
        python3 manage.py test category page

  deploy:
    if: github.ref == 'refs/heads/main' && success()  # Деплой только при пуше в ветку main и успешных тестах
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 89.19.216.56 >> ~/.ssh/known_hosts

    - name: Copy files via SCP
      run: |
        scp -r ./* root@89.19.216.56:/

    - name: Run docker-compose
      run: |
        ssh root@89.19.216.56 "
          cd / &&
          docker-compose down &&
          docker-compose up --build -d"

  notify:
    if: github.ref == 'refs/heads/main' && success()  # Условие для выполнения job notify
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get commit message
        id: get_commit_message
        run: echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:%s | tr -d '\n')" >> $GITHUB_ENV

      - name: Get commit comments (optional)
        id: get_commit_comments
        run: |
          COMMENTS=$(git log -1 --pretty=format:%b | tr -d '\n')
          echo "COMMIT_COMMENTS=${COMMENTS:-''}" >> $GITHUB_ENV

      - name: Send commit message to Telegram
        run: | 
          cd notify
          python send_message_pipeline.py ${{ secrets.TELEGRAM_BOT_TOKEN }} ${{ secrets.TELEGRAM_CHAT_ID }} "${{ env.COMMIT_MESSAGE }}" "${{ env.COMMIT_COMMENTS }}"
